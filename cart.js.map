{"version":3,"file":"cart.js","sources":["../src/cart.js"],"sourcesContent":["//Логіка сторінки Cart\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { STORAGE_KEYS } from './js/constants.js';\nimport { refs } from './js/refs.js';\nimport {\n  loadFromStorage,\n  saveToStorage,\n  updateCounters,\n  handleScroll,\n  scrollToTop,\n} from './js/helpers';\nimport { onModalActionsClick, onProductClick } from './js/handlers';\nimport { requestProductById } from './js/products-api.js';\nimport { renderProducts, clearProducts } from './js/render-function.js';\nimport './js/theme-toggle';\n\n/**\n * Оновлює блок \"Order Summary\" на сторінці кошика.\n */\nfunction updateCartSummary(itemsCount, total) {\n  // Ніяких змін тут не потрібно, оскільки refs.js тепер надає правильні посилання\n  if (refs.cartTotalItems) {\n    refs.cartTotalItems.textContent = itemsCount;\n  }\n  if (refs.cartTotalPrice) {\n    refs.cartTotalPrice.textContent = `$${total.toFixed(2)}`;\n  }\n}\n\n/**\n * Завантажує та відображає товари з кошика.\n */\nasync function loadCartProducts() {\n  const cartIds = loadFromStorage(STORAGE_KEYS.CART) || [];\n  clearProducts();\n\n  if (cartIds.length === 0) {\n    if (refs.productList) {\n      refs.productList.innerHTML =\n        '<li class=\"cart-empty-message\">Your cart is empty.</li>';\n    }\n    updateCartSummary(0, 0); // Оновлюємо суму, якщо кошик порожній\n    return;\n  }\n\n  try {\n    const productPromises = cartIds.map(id => requestProductById(id));\n    const products = await Promise.all(productPromises);\n    renderProducts(products);\n\n    const totalItems = products.length;\n    const totalPrice = products.reduce(\n      (sum, product) => sum + product.price,\n      0\n    );\n    updateCartSummary(totalItems, totalPrice); // Оновлюємо суму після завантаження товарів\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Failed to load cart products.',\n    });\n    updateCartSummary(0, 0); // У разі помилки скидаємо суму\n  }\n}\n\n/**\n * Обробник для кнопки \"Купити\".\n */\nfunction onBuyBtnClick() {\n  const cartIds = loadFromStorage(STORAGE_KEYS.CART) || [];\n  if (cartIds.length > 0) {\n    iziToast.success({\n      title: 'Success',\n      message: 'Products purchased successfully!',\n      position: 'topRight',\n    });\n    saveToStorage(STORAGE_KEYS.CART, []);\n    loadCartProducts(); // Перезавантажуємо кошик (він стане порожнім)\n    updateCounters(); // Оновлюємо лічильник у хедері\n  } else {\n    iziToast.info({\n      title: 'Info',\n      message: 'Your cart is empty.',\n      position: 'topRight',\n    });\n  }\n}\n\n/**\n * Обробник кастомної події оновлення localStorage.\n * @param {CustomEvent} event\n */\nfunction handleStorageUpdate(event) {\n  // Перевіряємо, чи оновився саме кошик\n  if (event.detail.key === STORAGE_KEYS.CART) {\n    // Якщо так, перезавантажуємо список товарів на сторінці\n    loadCartProducts();\n  }\n}\n\n/**\n * Ініціалізація сторінки кошика.\n */\nfunction initializeCartPage() {\n  updateCounters();\n  loadCartProducts();\n\n  if (refs.productList) {\n    refs.productList.addEventListener('click', onProductClick);\n  }\n  if (refs.modalActions) {\n    refs.modalActions.addEventListener('click', onModalActionsClick);\n  }\n  if (refs.cartBuyBtn) refs.cartBuyBtn.addEventListener('click', onBuyBtnClick);\n  if (refs.scrollUpBtn) {\n    window.addEventListener('scroll', handleScroll);\n    refs.scrollUpBtn.addEventListener('click', scrollToTop);\n  }\n  document.addEventListener('storageUpdated', handleStorageUpdate);\n}\n\ndocument.addEventListener('DOMContentLoaded', initializeCartPage);\n"],"names":["updateCartSummary","itemsCount","total","refs","loadCartProducts","cartIds","loadFromStorage","STORAGE_KEYS","clearProducts","productPromises","id","requestProductById","products","renderProducts","totalItems","totalPrice","sum","product","iziToast","onBuyBtnClick","saveToStorage","updateCounters","handleStorageUpdate","event","initializeCartPage","onProductClick","onModalActionsClick","handleScroll","scrollToTop"],"mappings":"yKAoBA,SAASA,EAAkBC,EAAYC,EAAO,CAExCC,EAAK,iBACPA,EAAK,eAAe,YAAcF,GAEhCE,EAAK,iBACPA,EAAK,eAAe,YAAc,IAAID,EAAM,QAAQ,CAAC,CAAC,GAE1D,CAKA,eAAeE,GAAmB,CAChC,MAAMC,EAAUC,EAAgBC,EAAa,IAAI,GAAK,CAAA,EAGtD,GAFAC,IAEIH,EAAQ,SAAW,EAAG,CACpBF,EAAK,cACPA,EAAK,YAAY,UACf,2DAEJH,EAAkB,EAAG,CAAC,EACtB,MACD,CAED,GAAI,CACF,MAAMS,EAAkBJ,EAAQ,IAAIK,GAAMC,EAAmBD,CAAE,CAAC,EAC1DE,EAAW,MAAM,QAAQ,IAAIH,CAAe,EAClDI,EAAeD,CAAQ,EAEvB,MAAME,EAAaF,EAAS,OACtBG,EAAaH,EAAS,OAC1B,CAACI,EAAKC,IAAYD,EAAMC,EAAQ,MAChC,CACN,EACIjB,EAAkBc,EAAYC,CAAU,CACzC,MAAe,CACdG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,+BACf,CAAK,EACDlB,EAAkB,EAAG,CAAC,CACvB,CACH,CAKA,SAASmB,GAAgB,EACPb,EAAgBC,EAAa,IAAI,GAAK,CAAA,GAC1C,OAAS,GACnBW,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,mCACT,SAAU,UAChB,CAAK,EACDE,EAAcb,EAAa,KAAM,CAAA,CAAE,EACnCH,IACAiB,KAEAH,EAAS,KAAK,CACZ,MAAO,OACP,QAAS,sBACT,SAAU,UAChB,CAAK,CAEL,CAMA,SAASI,EAAoBC,EAAO,CAE9BA,EAAM,OAAO,MAAQhB,EAAa,MAEpCH,GAEJ,CAKA,SAASoB,GAAqB,CAC5BH,IACAjB,IAEID,EAAK,aACPA,EAAK,YAAY,iBAAiB,QAASsB,CAAc,EAEvDtB,EAAK,cACPA,EAAK,aAAa,iBAAiB,QAASuB,CAAmB,EAE7DvB,EAAK,YAAYA,EAAK,WAAW,iBAAiB,QAASgB,CAAa,EACxEhB,EAAK,cACP,OAAO,iBAAiB,SAAUwB,CAAY,EAC9CxB,EAAK,YAAY,iBAAiB,QAASyB,CAAW,GAExD,SAAS,iBAAiB,iBAAkBN,CAAmB,CACjE,CAEA,SAAS,iBAAiB,mBAAoBE,CAAkB"}